local args = {...}

GRID_WIDTH = 1
GRID_HEIGHT = 1

GRID_SIZE = 8
PROTOCOL = "press"
HANDSHAKE_TIMEOUT = 2
--PREPARE_TIMEOUT = 25

local modem = peripheral.find("modem", rednet.open)
local bots = {}
local bots_ids = {}

function init_bots()
    print("[Info] Finding all turtles...")
    local valid = true
    local count = 0
    local ready = 0

    for y = 0, GRID_HEIGHT - 1 do
        for x = 0, GRID_WIDTH - 1 do
            -- find by id robot<letter> <number>
            local name = string.format("robot%s%d", string.char(65 + x), y + 1)
            local id = rednet.lookup(PROTOCOL, name)
            if id then
                count = count + 1
                bots[id] = {name = name, ack = false, ready = false, x = x, y = y}  

                bots_ids[name] = id
            else
                print("[Error] Bot " .. name .. " not found!")
                valid = false
            end
        end
    end

    print("[Info] Found " .. count .. " turtles.")
    print("[Info] Waiting for handshakes...")

    function send()
        for id, bot in pairs(bots) do
            rednet.send(id, "handshake", PROTOCOL)
            sleep(0.01)
        end
    end

    local ready = 0
    
    function receive()
        local x, y = term.getCursorPos()
        term.setCursorPos(x, y)
        print("[Info] Number of handshaken turtles: " .. ready .. "/" .. count)

        local start = os.clock()
        while os.clock() - start < HANDSHAKE_TIMEOUT and ready < count do
            local id, msg, proto = rednet.receive(PROTOCOL, HANDSHAKE_TIMEOUT - (os.clock() - start))
            if id and msg == "ack" then
                bots[id].ack = true
                ready = ready + 1
                start = os.clock()
                term.setCursorPos(x, y)
                print("[Info] Number of handshaken turtles: " .. ready .. "/" .. count)
            end
        end
    end

    parallel.waitForAll(send, receive)
    
    for id, bot in pairs(bots) do
        if not bot.ack then
            print("[Error] Bot " .. bot.name .. " did not handshake!") 
            valid = false
        end
    end
    
    return valid
end

init_bots()
